import java.util.Arrays;

public class MinimizeMalwareSpread {
    public int minMalwareSpread(int[][] graph, int[] initial) {
        //    0         3
        //  1    2
        //   0  1  2     3         013
        //   0  0  0     1
        int[] color = new int[graph.length];
        int[] cntcolor = new int[graph.length];
        int[] cntiniIncolor = new int[graph.length];
        int minM2now = 0,res = graph.length-1;
        int curmin = 0;
        Arrays.fill(color,-1);
        coloring(graph,color);
        //cntcolor  0  3
        //
        //cntcolor  1  1
        for(int c: color){
            cntcolor[c]++;
        }
        //cntiniInColor [0]  2
        //
        //              [1]   1
        for(int ini: initial){
            cntiniIncolor[color[ini]]++;
        }
        for(int ini : initial){
            if(cntiniIncolor[color[ini]]>1){// multiple ini in con group{
                if(minM2now==0){
                    res = Math.min(ini,res);
                }
            }else{ // only one ini in the con group
                //M = cntcolor[color[ini]]
                curmin = cntcolor[color[ini]];
                if(minM2now==curmin){
                    res = Math.min(ini,res);
                }else if(minM2now<curmin){
                    minM2now = curmin;
                    res = ini;
                }
            }
        }
        return res;
    }
    private void coloring(int[][] graph, int[] color){
        int curcolor = 0;
        for(int i = 0;i<graph.length;i++){
            if(color[i]==-1){
                colorwith(i,graph,color,curcolor++);
            }
        }
    }
    private void colorwith(int i, int[][] graph, int[] c, int cco){
        c[i] = cco;
        for(int nei=0;nei<graph.length;nei++){
            if(c[nei]==-1&&graph[i][nei]==1) colorwith(nei,graph,c,cco);
        }
    }
    public static void main(String[] args){
       MinimizeMalwareSpread m = new MinimizeMalwareSpread();
       m.minMalwareSpread(new int[][]{
               {1,0,0,0},
               {0,1,0,0},
               {0,0,1,1},
               {0,0,1,1},
       },
               new int[]{3,1}
               );
    }
}
